cmake_minimum_required(VERSION 3.10)

project(oproject_overeye
   VERSION 0.0.1
   DESCRIPTION "project overeye"
   LANGUAGES CXX
)

# Include cmake scripts
include(cmake/configurations.cmake)
include(cmake/warnings.cmake)
include(cmake/conan.cmake)

# Project settings
set(CMAKE_VERBOSE_MAKEFILE ON)
set(CMAKE_POSITION_INDEPENDENT_CODE ON)

# Set up Conan dependencies
# To find packages:
#    - https://bintray.com/bincrafters/public-conan
#    - https://conan.io/center/
set(CONAN_EXTRA_REQUIRES "")
set(CONAN_EXTRA_OPTIONS "")
set(CONAN_EXTRA_REQUIRES ${CONAN_EXTRA_REQUIRES}
   gtest/1.11.0
   sigslot/1.2.0
   )
run_conan()

# Set output directory of all projects to be somewhere sensible
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# additional include directories
include_directories(3rdparty/mzlib/include)

# Projects in this solution
add_subdirectory(library)
add_subdirectory(tests)
add_subdirectory(overeye)

# Group CMake projects together
set_property(GLOBAL PROPERTY USE_FOLDERS ON)

# Make app the default startup project in Visual Studio rather than autogenerated ALL_BUILDS project
set_property(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR} PROPERTY VS_STARTUP_PROJECT overeye)

# Set working directory property in Visual Studio so that resource files will be in expected relative place
set_property(TARGET overeye PROPERTY VS_DEBUGGER_WORKING_DIRECTORY "${CMAKE_RUNTIME_OUTPUT_DIRECTORY}")
